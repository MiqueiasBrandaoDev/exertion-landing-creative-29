import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { 
  FileText, 
  Search, 
  Filter,
  Calendar,
  Clock,
  Users,
  Eye,
  Download,
  ChevronLeft,
  ChevronRight
} from 'lucide-react';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import { 
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from '@/components/ui/dialog';

interface Resumo {
  id: number;
  grupo_nome: string;
  grupo_id: number;
  conteudo: string;
  data_criacao: string;
  status: 'enviado' | 'erro' | 'pendente';
  total_mensagens: number;
}

const Resumos = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedGroup, setSelectedGroup] = useState<string>('all');
  const [selectedStatus, setSelectedStatus] = useState<string>('all');
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 6;

  // Mock data - replace with actual API calls
  const [resumos] = useState<Resumo[]>([
    {
      id: 1,
      grupo_nome: 'Equipe Marketing',
      grupo_id: 1,
      conteudo: `üìä **Resumo do Grupo - Equipe Marketing**
üìÖ Data: 15/01/2024

üî• **Principais Discuss√µes:**
‚Ä¢ Campanha Q1 2024 - Definidas estrat√©gias para redes sociais
‚Ä¢ Budget aprovado para Google Ads
‚Ä¢ Novo designer contratado - Jo√£o Silva
‚Ä¢ Review de performance das campanhas de dezembro

üí° **Decis√µes Tomadas:**
‚Ä¢ Aumentar investimento em TikTok em 30%
‚Ä¢ Criar landing pages espec√≠ficas para cada produto
‚Ä¢ Implementar A/B testing em todas as campanhas

üìà **M√©tricas Discutidas:**
‚Ä¢ CTR m√©dio: 3.2% (‚Üó 0.5%)
‚Ä¢ Convers√µes: 847 (‚Üó 12%)
‚Ä¢ CAC: R$ 45,30 (‚Üò R$ 3,20)

üéØ **Pr√≥ximos Passos:**
‚Ä¢ Reuni√£o com o time de produto na ter√ßa
‚Ä¢ Apresenta√ß√£o dos resultados para diretoria
‚Ä¢ In√≠cio da campanha de carnaval`,
      data_criacao: '2024-01-15 09:00:00',
      status: 'enviado',
      total_mensagens: 47
    },
    {
      id: 2,
      grupo_nome: 'Desenvolvimento',
      grupo_id: 2,
      conteudo: `üíª **Resumo do Grupo - Desenvolvimento**
üìÖ Data: 15/01/2024

üöÄ **Features Desenvolvidas:**
‚Ä¢ API de notifica√ß√µes push implementada
‚Ä¢ Dashboard de analytics finalizado
‚Ä¢ Corre√ß√£o de bugs cr√≠ticos no m√≥dulo de pagamento
‚Ä¢ Testes automatizados para m√≥dulo de usu√°rios

üîß **Issues Resolvidas:**
‚Ä¢ Bug #1247: Erro no login social
‚Ä¢ Bug #1248: Lentid√£o na listagem de produtos
‚Ä¢ Bug #1249: Falha no envio de emails

üìã **Code Review:**
‚Ä¢ PR #456: Otimiza√ß√£o de queries (aprovado)
‚Ä¢ PR #457: Refatora√ß√£o do m√≥dulo auth (em review)
‚Ä¢ PR #458: Nova feature de relat√≥rios (aprovado)

üéØ **Planejamento:**
‚Ä¢ Deploy da vers√£o 2.1.0 amanh√£
‚Ä¢ In√≠cio do desenvolvimento da v2.2.0
‚Ä¢ Reuni√£o de planning na quinta-feira`,
      data_criacao: '2024-01-15 09:00:00',
      status: 'enviado',
      total_mensagens: 73
    },
    {
      id: 3,
      grupo_nome: 'Vendas',
      grupo_id: 3,
      conteudo: `üí∞ **Resumo do Grupo - Vendas**
üìÖ Data: 14/01/2024

üìä **Resultados do Dia:**
‚Ä¢ 12 demos agendadas
‚Ä¢ 8 propostas enviadas
‚Ä¢ 3 contratos fechados
‚Ä¢ R$ 45.000 em vendas

üéØ **Pipeline:**
‚Ä¢ 67 leads qualificados
‚Ä¢ 23 oportunidades em negocia√ß√£o
‚Ä¢ R$ 230.000 em pipeline total
‚Ä¢ Taxa de convers√£o: 18%

üèÜ **Destaques:**
‚Ä¢ Maria bateu meta mensal (120%)
‚Ä¢ Pedro fechou maior contrato do trimestre
‚Ä¢ Novo m√©todo de follow-up aprovado
‚Ä¢ Workshop de obje√ß√µes na sexta

‚ö†Ô∏è **Aten√ß√£o:**
‚Ä¢ Cliente ABC pendente de resposta
‚Ä¢ Proposta XYZ vence amanh√£
‚Ä¢ Reuni√£o urgente com prospect DEF`,
      data_criacao: '2024-01-14 18:00:00',
      status: 'erro',
      total_mensagens: 28
    },
    {
      id: 4,
      grupo_nome: 'Suporte',
      grupo_id: 4,
      conteudo: `üéß **Resumo do Grupo - Suporte**
üìÖ Data: 15/01/2024

üìû **Atendimentos:**
‚Ä¢ 43 tickets resolvidos
‚Ä¢ 12 tickets em andamento
‚Ä¢ 3 tickets escalados
‚Ä¢ Tempo m√©dio de resposta: 2h15min

üî• **Principais Issues:**
‚Ä¢ Problema na integra√ß√£o do WhatsApp (resolvido)
‚Ä¢ Lentid√£o no carregamento (investigando)
‚Ä¢ Erro de sincroniza√ß√£o (escalado para dev)

üë• **Feedback dos Clientes:**
‚Ä¢ NPS do dia: 8.7/10
‚Ä¢ 5 elogios recebidos
‚Ä¢ 2 sugest√µes de melhoria
‚Ä¢ 1 reclama√ß√£o (j√° resolvida)

üìà **Melhorias:**
‚Ä¢ Novo chatbot implementado
‚Ä¢ Base de conhecimento atualizada
‚Ä¢ Treinamento da equipe conclu√≠do`,
      data_criacao: '2024-01-15 18:30:00',
      status: 'enviado',
      total_mensagens: 35
    },
    {
      id: 5,
      grupo_nome: 'Equipe Marketing',
      grupo_id: 1,
      conteudo: `üìä **Resumo do Grupo - Equipe Marketing**
üìÖ Data: 14/01/2024

üîç **An√°lises Realizadas:**
‚Ä¢ Relat√≥rio de performance das campanhas
‚Ä¢ An√°lise de concorr√™ncia
‚Ä¢ Pesquisa de palavras-chave
‚Ä¢ Estudo de personas

üì± **Redes Sociais:**
‚Ä¢ Instagram: 15k impress√µes (+12%)
‚Ä¢ LinkedIn: 8.5k visualiza√ß√µes (+8%)
‚Ä¢ TikTok: 22k visualiza√ß√µes (+25%)
‚Ä¢ Facebook: 12k alcance (+5%)

üí° **Insights:**
‚Ä¢ V√≠deos performam 40% melhor
‚Ä¢ Posts manh√£ t√™m maior engajamento
‚Ä¢ Stories geram mais traffic para site
‚Ä¢ Carrossel aumenta tempo de perman√™ncia

üé® **Criativos:**
‚Ä¢ 8 novos designs aprovados
‚Ä¢ Campanha de branding finalizada
‚Ä¢ Materiais para feira prontos`,
      data_criacao: '2024-01-14 09:00:00',
      status: 'enviado',
      total_mensagens: 52
    },
    {
      id: 6,
      grupo_nome: 'Desenvolvimento',
      grupo_id: 2,
      conteudo: `üíª **Resumo do Grupo - Desenvolvimento**
üìÖ Data: 13/01/2024

‚ö° **Urgente - Problemas Cr√≠ticos:**
‚Ä¢ Servidor principal com instabilidade
‚Ä¢ API de pagamentos retornando erro 500
‚Ä¢ Database com alta lat√™ncia
‚Ä¢ Usu√°rios reportando lentid√£o

üîß **A√ß√µes Tomadas:**
‚Ä¢ Restart dos servi√ßos principais
‚Ä¢ Escalamento autom√°tico ativado
‚Ä¢ Monitoramento intensificado
‚Ä¢ Time de plant√£o acionado

üìä **Status Atual:**
‚Ä¢ 99.2% de disponibilidade (meta: 99.9%)
‚Ä¢ Tempo de resposta: 450ms (meta: 200ms)
‚Ä¢ Erro rate: 0.8% (meta: 0.1%)

üö® **Pr√≥ximas A√ß√µes:**
‚Ä¢ Migra√ß√£o para nova infraestrutura
‚Ä¢ Otimiza√ß√£o de queries cr√≠ticas
‚Ä¢ Implementa√ß√£o de circuit breakers`,
      data_criacao: '2024-01-13 15:45:00',
      status: 'pendente',
      total_mensagens: 89
    }
  ]);

  // Get unique groups for filter
  const groups = [...new Set(resumos.map(r => r.grupo_nome))];

  // Filter resumos
  const filteredResumos = resumos.filter(resumo => {
    const matchesSearch = resumo.grupo_nome.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         resumo.conteudo.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesGroup = selectedGroup === 'all' || resumo.grupo_nome === selectedGroup;
    const matchesStatus = selectedStatus === 'all' || resumo.status === selectedStatus;
    
    return matchesSearch && matchesGroup && matchesStatus;
  });

  // Pagination
  const totalPages = Math.ceil(filteredResumos.length / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const paginatedResumos = filteredResumos.slice(startIndex, startIndex + itemsPerPage);

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'enviado':
        return <Badge className="bg-green-500/20 text-green-400 border-green-500/30">Enviado</Badge>;
      case 'erro':
        return <Badge variant="destructive">Erro</Badge>;
      case 'pendente':
        return <Badge variant="secondary">Pendente</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleString('pt-BR');
  };

  const getTimeSince = (dateString: string) => {
    const now = new Date();
    const date = new Date(dateString);
    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));
    
    if (diffInHours < 1) return 'Agora mesmo';
    if (diffInHours < 24) return `${diffInHours}h atr√°s`;
    return `${Math.floor(diffInHours / 24)}d atr√°s`;
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="space-y-2">
        <h1 className="text-3xl font-bold cyber-text">Hist√≥rico de Resumos</h1>
        <p className="text-muted-foreground">
          Visualize todos os resumos enviados para seus grupos
        </p>
      </div>

      {/* Filters */}
      <div className="flex flex-col sm:flex-row gap-4">
        <div className="relative flex-1">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
          <Input
            placeholder="Buscar resumos..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="pl-10 cyber-border"
          />
        </div>
        
        <Select value={selectedGroup} onValueChange={setSelectedGroup}>
          <SelectTrigger className="w-full sm:w-48 cyber-border">
            <SelectValue placeholder="Filtrar por grupo" />
          </SelectTrigger>
          <SelectContent className="cyber-card">
            <SelectItem value="all">Todos os grupos</SelectItem>
            {groups.map(group => (
              <SelectItem key={group} value={group}>{group}</SelectItem>
            ))}
          </SelectContent>
        </Select>

        <Select value={selectedStatus} onValueChange={setSelectedStatus}>
          <SelectTrigger className="w-full sm:w-40 cyber-border">
            <SelectValue placeholder="Status" />
          </SelectTrigger>
          <SelectContent className="cyber-card">
            <SelectItem value="all">Todos</SelectItem>
            <SelectItem value="enviado">Enviado</SelectItem>
            <SelectItem value="erro">Erro</SelectItem>
            <SelectItem value="pendente">Pendente</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Results count */}
      <div className="text-sm text-muted-foreground">
        {filteredResumos.length} resumo{filteredResumos.length !== 1 ? 's' : ''} encontrado{filteredResumos.length !== 1 ? 's' : ''}
      </div>

      {/* Resumos Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {paginatedResumos.map((resumo) => (
          <Card key={resumo.id} className="cyber-card cyber-scan">
            <CardHeader>
              <div className="flex justify-between items-start">
                <div className="space-y-1">
                  <CardTitle className="flex items-center gap-2">
                    <Users className="h-5 w-5 text-primary" />
                    {resumo.grupo_nome}
                  </CardTitle>
                  <div className="flex items-center gap-4 text-sm text-muted-foreground">
                    <span className="flex items-center gap-1">
                      <Calendar className="h-4 w-4" />
                      {getTimeSince(resumo.data_criacao)}
                    </span>
                    <span className="flex items-center gap-1">
                      <FileText className="h-4 w-4" />
                      {resumo.total_mensagens} msgs
                    </span>
                  </div>
                </div>
                {getStatusBadge(resumo.status)}
              </div>
            </CardHeader>
            
            <CardContent className="space-y-4">
              <div className="bg-muted/30 rounded-lg p-3 max-h-32 overflow-hidden relative">
                <p className="text-sm leading-relaxed">
                  {resumo.conteudo.substring(0, 200)}...
                </p>
                <div className="absolute bottom-0 left-0 right-0 h-8 bg-gradient-to-t from-muted/30 to-transparent" />
              </div>
              
              <div className="flex justify-between items-center">
                <span className="text-xs text-muted-foreground">
                  {formatDate(resumo.data_criacao)}
                </span>
                
                <div className="flex gap-2">
                  <Dialog>
                    <DialogTrigger asChild>
                      <Button variant="outline" size="sm">
                        <Eye className="h-4 w-4 mr-1" />
                        Ver
                      </Button>
                    </DialogTrigger>
                    <DialogContent className="max-w-2xl max-h-[80vh] cyber-card">
                      <DialogHeader>
                        <DialogTitle className="flex items-center gap-2">
                          <Users className="h-5 w-5 text-primary" />
                          {resumo.grupo_nome}
                        </DialogTitle>
                      </DialogHeader>
                      <div className="mt-4">
                        <div className="flex items-center gap-4 mb-4 text-sm text-muted-foreground">
                          <span className="flex items-center gap-1">
                            <Calendar className="h-4 w-4" />
                            {formatDate(resumo.data_criacao)}
                          </span>
                          <span className="flex items-center gap-1">
                            <FileText className="h-4 w-4" />
                            {resumo.total_mensagens} mensagens
                          </span>
                          {getStatusBadge(resumo.status)}
                        </div>
                        <div className="bg-muted/30 rounded-lg p-4 max-h-96 overflow-y-auto">
                          <pre className="text-sm leading-relaxed whitespace-pre-wrap font-sans">
                            {resumo.conteudo}
                          </pre>
                        </div>
                      </div>
                    </DialogContent>
                  </Dialog>
                  
                  <Button variant="outline" size="sm">
                    <Download className="h-4 w-4" />
                  </Button>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Pagination */}
      {totalPages > 1 && (
        <div className="flex justify-center items-center gap-2">
          <Button
            variant="outline"
            size="sm"
            onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}
            disabled={currentPage === 1}
          >
            <ChevronLeft className="h-4 w-4" />
          </Button>
          
          <span className="text-sm text-muted-foreground">
            P√°gina {currentPage} de {totalPages}
          </span>
          
          <Button
            variant="outline"
            size="sm"
            onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}
            disabled={currentPage === totalPages}
          >
            <ChevronRight className="h-4 w-4" />
          </Button>
        </div>
      )}

      {/* Empty State */}
      {filteredResumos.length === 0 && (
        <Card className="cyber-card">
          <CardContent className="flex flex-col items-center justify-center py-12">
            <FileText className="h-12 w-12 text-muted-foreground mb-4" />
            <h3 className="text-lg font-semibold mb-2">Nenhum resumo encontrado</h3>
            <p className="text-muted-foreground text-center">
              {searchTerm || selectedGroup !== 'all' || selectedStatus !== 'all'
                ? 'Tente ajustar os filtros de busca.'
                : 'Os resumos enviados aparecer√£o aqui.'
              }
            </p>
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default Resumos;